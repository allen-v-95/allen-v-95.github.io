{"version":3,"sources":["components/TopNav.js","components/LeftNav.js","components/DashboardCard.js","components/Dashboard.js","components/App.js","components/Creation.js","components/Question.js","base.js","components/Create.js","components/Results.js","index.js"],"names":["TopNav","className","to","React","Component","contextTypes","router","PropTypes","object","LeftNav","DashboardCard","openChallenge","bind","this","props","challengeName","onClick","Dashboard","setChallengeName","value","type","ref","input","App","console","log","history","push","Creation","createQuestion","correctAnswer","setValue","nextQuestion","previousQuestion","question","number","count","title","name","answer1","answer2","answer3","answer4","e","target","checked","setCorrectAnswers","setState","creation","onChange","Object","keys","questions","map","key","join","Question","toggleCheck","checkAnswer","state","answers","score","answer","indexOf","splice","correctAnswers","details","app","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Create","moveUp","syncState","match","params","challengeId","context","style","marginTop","checkScore","index","checkedAnswers","Results","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.dc4d4299.chunk.js","sourcesContent":["import React from 'react';\nimport '../scss/TopNav.scss';\nimport { PropTypes } from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nclass TopNav extends React.Component {\n\n  render(){\n    return (\n      <div className=\"top-nav\">\n        <li><Link to='/'>Dashboard</Link></li>\n        <li><Link to='/create'>Create</Link></li>\n        <li><Link to='/results'>Results</Link></li>\n      </div>\n    )\n  }\n}\n\nTopNav.contextTypes = {\n  router: PropTypes.object\n}\n\nexport default TopNav;\n","import React from 'react';\nimport '../scss/LeftNav.scss';\n\nclass LeftNav extends React.Component {\n  render(){\n    return (\n      <div className=\"left-nav\">\n        <div className=\"profile\">\n          <p>User:</p>\n          <p>Victoria Allen</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LeftNav;\n","import React from 'react';\nimport '../scss/DashboardCard.scss';\n\nclass DashboardCard extends React.Component {\n\n  constructor(){\n    super();\n\n    this.openChallenge = this.openChallenge.bind(this);\n  }\n\n  openChallenge(){\n    this.props.openChallenge(this.props.challengeName);\n  }\n\n  render(){\n    return (\n      <div className=\"dashboard-card\">\n        <h2 className=\"challenge-name\">{this.props.challengeName}</h2>\n        <button onClick={this.openChallenge}>Open Challenge</button>\n      </div>\n    )\n  }\n}\n\nexport default DashboardCard;\n","import React from 'react';\nimport '../scss/Dashboard.scss';\n\nimport DashboardCard from './DashboardCard';\n\nclass Dashboard extends React.Component {\n\n  constructor(){\n    super();\n    this.setChallengeName = this.setChallengeName.bind(this);\n    this.openChallenge = this.openChallenge.bind(this);\n  }\n\n  setChallengeName(){\n    const challengeName = this.challengeName.value;\n    this.props.setChallengeName(challengeName);\n   } \n\n   openChallenge(challengeName){\n    this.props.setChallengeName(challengeName);\n   }\n\n  render(){\n    return (\n      <div className=\"dashboard\">\n        <input type=\"text\" ref={(input) => this.challengeName = input}/>\n        <button onClick={this.setChallengeName} className=\"set-name\">Set Challenge Name</button>\n        <div className=\"cards-container\">\n          <DashboardCard openChallenge={this.openChallenge} challengeName=\"Challenge1\"/>\n          <DashboardCard openChallenge={this.openChallenge} challengeName=\"Challenge2\"/>\n          <DashboardCard openChallenge={this.openChallenge} challengeName=\"Challenge3\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nimport TopNav from './TopNav';\nimport LeftNav from './LeftNav';\nimport Dashboard from './Dashboard';\nimport { PropTypes } from 'prop-types'\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.setChallengeName = this.setChallengeName.bind(this);\n  }\n\n  setChallengeName(challengeName){\n    console.log(challengeName);\n    this.props.history.push(`/create/${challengeName}`);\n  }\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <TopNav />\n        <div className=\"bottom\">\n          <LeftNav />\n          <Dashboard setChallengeName={this.setChallengeName}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.contextTypes = {\n  router: PropTypes.object\n}\n\nexport default App;\n","import React from 'react';\nimport '../scss/Creation.scss';\n\nclass Creation extends React.Component {\n\n  constructor(){\n    super();\n    this.createQuestion = this.createQuestion.bind(this);\n    this.correctAnswer = this.correctAnswer.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.previousQuestion = this.previousQuestion.bind(this);\n  }\n\n  createQuestion(){\n    const question = {\n      number: this.props.count,\n      title: this.name.value,\n      answer1: this.answer1.value,\n      answer2: this.answer2.value,\n      answer3: this.answer3.value,\n      answer4: this.answer4.value\n    }\n    this.props.createQuestion(question);\n  }\n\n  correctAnswer(e){\n    if(e.target.checked){\n      this.props.setCorrectAnswers(e.target.value);\n    }\n  }\n\n  setValue(){\n    this.setState({\n      title : this.name.value\n    })\n  }\n\n  nextQuestion(){\n    this.name.value = null;\n    this.answer1.value = null;\n    this.answer2.value = null;\n    this.answer3.value = null;\n    this.answer4.value = null;\n    this.props.nextQuestion();\n  }\n\n  previousQuestion(){\n    this.name.value = null;\n    this.answer1.value = null;\n    this.answer2.value = null;\n    this.answer3.value = null;\n    this.answer4.value = null;\n    this.props.previousQuestion();\n  }\n\n  render(){\n\n    return (\n      <div ref={(input) => this.creation = input} className=\"creation\">\n        <div className=\"question\">\n          <div className=\"question-number\">Question {this.props.count}:</div>\n          <input ref={(input) => this.name = input} type=\"text\" className=\"question-text\" />\n        </div>\n\n        <div className=\"answers\">\n        Answer 1:\n          <div className=\"answer-input\">\n            <input ref={(input) => this.answer1 = input} type=\"text\" className=\"answer1\" />\n\n            <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys (this.props.questions).map(key => key == `question-${this.props.count}` ?  this.props.questions[key].answer1 : '').join('')}/>\n          </div>\n          \n          Answer 2:\n          <div className=\"answer-input\">\n            <input ref={(input) => this.answer2 = input} type=\"text\" className=\"answer2\" />\n\n            <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys (this.props.questions).map(key => key == `question-${this.props.count}` ?  this.props.questions[key].answer2 : '').join('')}/>\n          </div>\n\n          Answer 3:\n          <div className=\"answer-input\">\n            <input ref={(input) => this.answer3 = input} type=\"text\" className=\"answer3\" />\n\n            <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys (this.props.questions).map(key => key == `question-${this.props.count}` ?  this.props.questions[key].answer3 : '').join('')}/>\n          </div>\n\n          Answer 4:\n          <div className=\"answer-input\">\n            <input ref={(input) => this.answer4 = input} type=\"text\" className=\"answer4\" />\n\n            <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys (this.props.questions).map(key => key == `question-${this.props.count}` ?  this.props.questions[key].answer4 : '').join('')}/>\n          </div>\n        </div>\n        <div className=\"button-section\">\n          <button onClick={this.createQuestion}>submit</button>\n          <button onClick={this.nextQuestion}>next</button>\n          <button onClick={this.previousQuestion}>previous</button>\n        </div>\n      </div>\n    )\n\n\n\n    // return (\n    //   <div ref={(input) => this.creation = input} className=\"creation\">\n    //     <div className=\"question\">\n    //       <div className=\"question-number\">Question {this.props.count}:</div>\n    //       <input ref={(input) => this.name = input} type=\"text\" className=\"question-text\" value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].title : '').join('')}/>\n    //     </div>\n\n    //     <div className=\"answers\">\n    //       Answer 1:\n    //       <input ref={(input) => this.answer1 = input} type=\"text\" className=\"answer1\" value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer1 : '').join('')}/>\n          \n    //       <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer1 : '').join('')}/>\n          \n    //       Answer 2:\n    //       <input ref={(input) => this.answer2 = input} type=\"text\" className=\"answer2\" value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer2 : '').join('')}/>\n\n    //       <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer2 : '').join('')}/>\n          \n    //       Answer 3:\n    //       <input ref={(input) => this.answer3 = input} type=\"text\" className=\"answer3\" value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer3 : '').join('')}/>\n          \n    //       <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer3 : '').join('')}/>\n          \n    //       Answer 4:\n    //       <input ref={(input) => this.answer4 = input} type=\"text\" className=\"answer4\" value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer4 : '').join('')}/>\n\n    //       <input type=\"checkbox\" onChange={this.correctAnswer} value={Object.keys(this.props.questions).map(key => key == `question-${this.props.count}` ? this.props.questions[key].answer4 : '').join('')}/>\n    //     </div>\n\n    //     <button onClick={this.createQuestion}>submit</button>\n    //     <button onClick={this.props.nextQuestion}>next</button>\n    //     <button onClick={this.props.previousQuestion}>previous</button>\n    //   </div>\n    // )\n  }\n}\n\nexport default Creation;\n\n\n// checkingAnswer={Object.keys(this.props.correctAnswers).map(key => key == `question-${this.props.count}` ? console.log(this.props.correctAnswers[key]) : '')} ","import React from 'react';\nimport '../scss/Question.scss';\n\nclass Question extends React.Component {\n\n  constructor(){\n    super();\n    this.toggleCheck = this.toggleCheck.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n\n    this.state = {\n      answers: [],\n      score: 0\n    }\n  }\n\n  toggleCheck(e){\n    if(e.target.checked){\n      const answers = [...this.state.answers];\n      answers.push(e.target.value);\n      this.setState({ answers });\n    }\n    else if(!e.target.checked){\n      const answers = [...this.state.answers];\n      const answer = answers.indexOf(e.target.value);\n      if(answer > -1){\n        answers.splice (answer, 1);\n      }\n      this.setState({ answers });\n    }\n  }\n\n  checkAnswer(){\n    const correctAnswer = Object.keys(this.props.correctAnswers).map(key => key == `question-${this.props.count}` ? this.props.correctAnswers[key] : '').join('');\n   \n    if(this.state.answers == correctAnswer){\n      let score = this.state.score;\n      score = 1;\n      this.setState({ score });\n      }\n    else if(this.state.answers !== correctAnswer){\n      let score = this.state.score;\n      score = -1;\n      this.setState({ score });\n    }\n  }\n\n  render(){\n    const { details } = this.props; \n    \n    return (\n      <div className=\"question-view\">\n        <h2 className=\"question-view__number\">Question{details.number}</h2>\n        <h2 className=\"question-view__title\">{details.title}</h2>\n        <div className=\"answer-view\">\n          {details.answer1} <input onChange={this.toggleCheck} type=\"checkbox\" className=\"answer\" value={details.answer1}/>\n          {details.answer2} <input onChange={this.toggleCheck} type=\"checkbox\" className=\"answer\" value={details.answer2}/>\n          {details.answer3} <input onChange={this.toggleCheck} type=\"checkbox\" className=\"answer\" value={details.answer3}/>\n          {details.answer4} <input onChange={this.toggleCheck} type=\"checkbox\" className=\"answer\" value={details.answer4}/>\n        </div>\n        <button onClick={this.checkAnswer}>check</button>\n        <p>{this.state.score == 1 ? 'Correct' : '' || this.state.score == -1 ? 'Incorrect' : ''}</p>\n      </div>\n    )\n  }\n}\n\nexport default Question;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\nimport 'firebase/auth';\n\nconst config ={\n    apiKey: \"AIzaSyAuT1_iMrGiIAg0knXGM4XCas-7NOvdiyM\",\n    authDomain: \"challenge-me-d4a56.firebaseapp.com\",\n    databaseURL: \"https://challenge-me-d4a56.firebaseio.com\"\n}\n\nconst app = firebase.initializeApp(config);\nconst base = Rebase.createClass(app.database());\n\nexport default base;","import React from 'react';\nimport '../scss/Create.scss';\n\nimport TopNav from './TopNav';\nimport LeftNav from './LeftNav';\nimport Creation from './Creation';\nimport Question from './Question';\nimport base from '../base';\n\nclass Create extends React.Component {\n\n  constructor(){\n    super();\n    this.createQuestion = this.createQuestion.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.previousQuestion = this.previousQuestion.bind(this);\n    this.setCorrectAnswers = this.setCorrectAnswers.bind(this);\n\n    this.state = {\n      questions: {},\n      answers: {},\n      count: 1,\n      correctAnswers: {},\n      moveUp: 0\n    }\n  }\n\n  componentWillMount(){\n    //runs right before app is rendered\n    this.ref = base.syncState(`/create/${this.props.match.params.challengeId}/questions`, {\n        context: this,\n        state: 'questions'\n    });\n    this.ref = base.syncState(`/create/${this.props.match.params.challengeId}/correctAnswers`, {\n      context: this,\n      state: 'correctAnswers'\n  });\n}\n\n  createQuestion(question){\n    const questions = {...this.state.questions};\n    questions[`question-${this.state.count}`] = question;\n    this.setState({ questions });\n\n    // let count = this.state.count;\n    // count++;\n    // this.setState({ count });\n\n    // let moveUp = this.state.moveUp;\n    // moveUp++;\n    // this.setState({ moveUp });\n  }\n\n  nextQuestion(){\n    let count = this.state.count;\n    count++;\n    this.setState({ count });\n\n    let moveUp = this.state.moveUp;\n    moveUp++;\n    this.setState({ moveUp });\n  }\n\n  previousQuestion(){\n    let count = this.state.count;\n    if(count == 1){\n      return;\n    }\n    count--;\n    this.setState({ count });\n\n    let moveUp = this.state.moveUp;\n    if(moveUp == 0){\n      return;\n    }\n    moveUp--;\n    this.setState({ moveUp });\n  }\n\n  setCorrectAnswers(answer){\n      const correctAnswers = {...this.state.correctAnswers};\n      correctAnswers[`question-${this.state.count}`] = answer;\n      this.setState({ correctAnswers });\n      console.log(correctAnswers);\n  }\n\n  setChallengeName(name){\n    const challengeName = name;\n    this.context.router.history.push(`/create/${challengeName}`);\n  }\n\n\n  render(){\n\n    return (\n      <div className=\"create\">\n        <TopNav />\n        <div className=\"bottom\">\n          <LeftNav />\n          <div className=\"main\">\n            <Creation setChallengeName={this.setChallengeName} correctAnswers={this.state.correctAnswers} setCorrectAnswers={this.setCorrectAnswers} questions={this.state.questions} previousQuestion={this.previousQuestion} nextQuestion={this.nextQuestion} createQuestion={this.createQuestion} count={this.state.count} />\n            <div className=\"test\">\n            <div className=\"question-container\" style={{marginTop: this.state.moveUp*-360}}>\n              {Object.keys(this.state.questions)\n              .map(key => <Question checkScore={this.checkScore} correctAnswers={this.state.correctAnswers} key={key} index={key} details={this.state.questions[key]} count={this.state.count} checkedAnswers={this.checkedAnswers}/>)\n              }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","import React from 'react';\n\nimport TopNav from './TopNav';\nimport LeftNav from './LeftNav';\n\nclass Results extends React.Component {\n  render(){\n\n    return (\n      <div className=\"create\">\n        <TopNav />\n        <LeftNav />\n        {/* <Submissions /> */}\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Create from './components/Create';\nimport Results from './components/Results';\nimport './scss/App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nconst Root = () => {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/create/:challengeId\" component={Create} />\n                <Route path=\"/results\" component={Results} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n"],"sourceRoot":""}